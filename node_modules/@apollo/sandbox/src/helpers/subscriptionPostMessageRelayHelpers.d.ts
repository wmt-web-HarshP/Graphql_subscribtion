import EventEmitter from 'eventemitter3';
import { HandleRequest } from './postMessageRelayHelpers';
export type GraphQLSubscriptionLibrary = 'subscriptions-transport-ws' | 'graphql-ws' | 'http-multipart';
type HTTPMultipartParams = {
    includeCookies?: boolean;
    handleRequest: HandleRequest;
};
export type HTTPMultipartClient = EventEmitter<'connected' | 'error' | 'disconnected'> & {
    stopListeningCallback: (() => void) | undefined;
};
export declare function executeSubscription({ operation, operationName, variables, headers, embeddedIFrameElement, operationId, embedUrl, subscriptionUrl, protocol, httpMultipartParams, }: {
    operation: string;
    operationId: string;
    embeddedIFrameElement: HTMLIFrameElement;
    operationName: string | undefined;
    variables?: Record<string, string>;
    headers?: Record<string, string>;
    embedUrl: string;
    subscriptionUrl: string;
    protocol: GraphQLSubscriptionLibrary;
    httpMultipartParams: HTTPMultipartParams;
}): {
    dispose: () => void;
};
export {};
